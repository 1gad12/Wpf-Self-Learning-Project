using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using System.Windows.Threading;

namespace SuperMargalitProj
{
    /// <summary>
    /// Interaction logic for Cyborg.xaml
    /// </summary>
    public partial class Cyborg : Window
    {
        private void main_Closing(object sender, System.ComponentModel.CancelEventArgs e) //Closing Stop Thread
        {                                                                                 //Closing Stop Thread
            MoveObj.Stop();                                                               //Closing Stop Thread
        }
        private DispatcherTimer MoveObj; //Set Timer That Move The Errors
        int Blen;                        //Length Error
        Image[] B;                       //Array Of Error
        Image[] U;                       //Array Of Bugs
        Rect RDosBox;                    //Rect Of DosBox To Check Intersect
        int round = 2000;                //Var To Know The Round
        int enemy = 0;                   //How Much Enemy On The Round
        bool levelup = true;             //If True Level Uping

        bool bU1 = true;                 //Bools To Know If They Are In The Round
        bool bU2 = true;                 //Bools To Know If They Are In The Round
        bool bU3 = true;                 //Bools To Know If They Are In The Round
        bool bU4 = true;                 //Bools To Know If They Are In The Round
        bool bU5 = true;                 //Bools To Know If They Are In The Round
                                         //Bools To Know If They Are In The Round
        bool bB1 = true;                 //Bools To Know If They Are In The Round
        bool bB2 = true;                 //Bools To Know If They Are In The Round
        bool bB3 = true;                 //Bools To Know If They Are In The Round
        bool bB4 = true;                 //Bools To Know If They Are In The Round
        bool bB5 = true;                 //Bools To Know If They Are In The Round
        public Cyborg()
        {
            InitializeComponent();
            this.Opacity = Class1.brightness / 1850; //Brightness

            Toly.Play();                             //Play Sound
            Toly.Volume = Class1.Volume;             //Volume Sound


            B = new Image[] { B1, B2, B3, B4, B5 };    //Array of Errors
            U = new Image[] { U1, U2, U3, U4, U5 };    //Array of Bugs
            Blen = B.Length;                           //Length Error

            MoveObj = new System.Windows.Threading.DispatcherTimer();         //MoveObj //Set Timer(1ms)
            MoveObj.Interval = TimeSpan.FromMilliseconds(1);                  //MoveObj //Set Timer(1ms)
            MoveObj.Tick += MoveObj_Tick;                                     //MoveObj //Set Timer(all 1ms)
            MoveObj.Start();                                                  //MoveObj //Set Timer(all 1ms)

            RDosBox = new Rect(Canvas.GetLeft(DosBox), Canvas.GetTop(DosBox), DosBox.Width, DosBox.Height); //Rect to DosBox To Check Intersect

            if (Class1.Bots)                                                                                            //Change Images IF TolyBot
            {                                                                                                           //Change Images IF TolyBot
                Back.ImageSource = new BitmapImage(new Uri(@"image/TolyBot/Map.jpg", UriKind.Relative));                //Change Images IF TolyBot
                                                                                                                        //Change Images IF TolyBot
                tolyborg.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/TolyBot/TolyBorg.png"));       //Change Images IF TolyBot
                DosBox.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/TolyBot/DosBox.png"));           //Change Images IF TolyBot
                                                                                                                        //Change Images IF TolyBot
                shoot.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/TolyBot/Asm.png"));               //Change Images IF TolyBot
                                                                                                                        //Change Images IF TolyBot
                U1.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/TolyBot/Bug.png"));                  //Change Images IF TolyBot
                U2.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/TolyBot/Bug.png"));                  //Change Images IF TolyBot
                U3.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/TolyBot/Bug.png"));                  //Change Images IF TolyBot
                U4.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/TolyBot/Bug.png"));                  //Change Images IF TolyBot
                U5.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/TolyBot/Bug.png"));                  //Change Images IF TolyBot
                                                                                                                        //Change Images IF TolyBot
            }                                                                                                           //Change Images IF TolyBot
            else                                                                                                        
            {
                Back.ImageSource = new BitmapImage(new Uri(@"image/MargaBot/Class.jpg", UriKind.Relative));            //Change Images IF TolyBot
                                                                                                                       //Change Images IF TolyBot
                tolyborg.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/MargaBot/MargalitBot.png"));  //Change Images IF TolyBot
                DosBox.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/MargaBot/Visual.png"));         //Change Images IF TolyBot
                                                                                                                       //Change Images IF TolyBot
                shoot.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/MargaBot/Table.png"));           //Change Images IF TolyBot
                                                                                                                       //Change Images IF TolyBot
                U1.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/MargaBot/Failed.png"));             //Change Images IF TolyBot
                U2.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/MargaBot/Failed.png"));             //Change Images IF TolyBot
                U3.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/MargaBot/Failed.png"));             //Change Images IF TolyBot
                U4.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/MargaBot/Failed.png"));             //Change Images IF TolyBot
                U5.Source = new BitmapImage(new Uri(@"pack://application:,,,/image/MargaBot/Failed.png"));             //Change Images IF TolyBot
            }                                                                                                          
        }                                                                                                              
                                                                                                                       
        private void MoveObj_Tick(object sender, EventArgs e)                                                          
        {                                                                                                              

            if (levelup == true)        //If LevelUP True Round Up
            {                           //If LevelUP True Round Up
             if(round % 2000 != 0)      //If LevelUP True Round Up
                round+=20;              //If LevelUP True Round Up
            }                           //If LevelUP True Round Up
            if (round == 2000)                                                                                              //If Round 1 Hide lbl And Move Obj
            {
                lblR.Visibility = Visibility.Hidden;                                                                        //Hide Round
                if (bB1)                                                                                                    //If B1 NO Move, Move
                {
                    MoveToE(B1, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //Move B1
                    bB1 = false;                                                                                            //B1 Already Move So False
                }
                if (bU1)                                                                                                    ///If B1 NO Move Move
                {
                    MoveToE(U1, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //Move U1
                    bU1 = false;                                                                                            //U1 Already Move So False
                }
                levelup = false;                                                                                            //Level Already Up So False
            }
            else if (round == 4000)                                                                                         //If Round 1 Hide lbl And Move Obj
            {
                lblR.Visibility = Visibility.Hidden;                                                                        //Hide Round
                if (bB1)                                                                                                    //If B1 NO Move, Move
                {
                    MoveToE(B1, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //Same...
                    bB1 = false;                                                                                            //............
                }                                                                                                           //............
                if (bU1)                                                                                                    //............
                {                                                                                                           //............
                    MoveToE(U1, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU1 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 1 && bB2)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(B2, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB2 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 2 && bU2)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(U2, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU2 = false;                                                                                            //............
                }                                                                                                           //............
                levelup = false;                                                                                            //............
            }                                                                                                               //............
            else if (round == 6000)                                                                                         //............
            {                                                                                                               //............
                lblR.Visibility = Visibility.Hidden;                                                                        //............
                if (bB1)                                                                                                    //............
                {                                                                                                           //............
                    MoveToE(B1, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB1 = false;                                                                                            //............
                }                                                                                                           //............
                if (bU1)                                                                                                    //............
                {                                                                                                           //............
                    MoveToE(U1, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU1 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 1 && bB2)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(B2, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB2 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 2 && bU2)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(U2, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU2 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 3 && bB3)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(B3, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB3 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 4 && bU3)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(U3, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU3 = false;                                                                                            //............
                }                                                                                                           //............
                levelup = false;                                                                                            //............
            }                                                                                                               //............
            else if (round == 8000)                                                                                         //............
            {                                                                                                               //............
                lblR.Visibility = Visibility.Hidden;                                                                        //............
                if (bB1)                                                                                                    //............
                {                                                                                                           //............
                    MoveToE(B1, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB1 = false;                                                                                            //............
                }                                                                                                           //............
                if (bU1)                                                                                                    //............
                {                                                                                                           //............
                    MoveToE(U1, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU1 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 1 && bB2)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(B2, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB2 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 2 && bU2)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(U2, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU2 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 3 && bB3)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(B3, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB3 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 4 && bU3)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(U3, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU3 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 5 && bB4)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(B4, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB4 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 6 && bU4)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(U4, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU4 = false;                                                                                            //............
                }                                                                                                           //............
                levelup = false;                                                                                            //............
            }                                                                                                               //............
            else if (round == 10000)                                                                                        //............
            {                                                                                                               //............
                lblR.Visibility = Visibility.Hidden;                                                                        //............
                if (bB1)                                                                                                    //............
                {                                                                                                           //............
                    MoveToE(B1, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB1 = false;                                                                                            //............
                }                                                                                                           //............
                if (bU1)                                                                                                    //............
                {                                                                                                           //............
                    MoveToE(U1, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU1 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 1 && bB2)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(B2, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB2 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 2 && bU2)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(U2, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU2 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 3 && bB3)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(B3, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB3 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 4 && bU3)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(U3, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU3 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 5 && bB4)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(B4, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB4 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 6 && bU4)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(U4, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU4 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 5 && bB5)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(B5, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bB5 = false;                                                                                            //............
                }                                                                                                           //............
                if (enemy >= 6 && bU5)                                                                                      //............
                {                                                                                                           //............
                    MoveToE(U5, Canvas.GetLeft(DosBox) + DosBox.Width / 2, Canvas.GetTop(DosBox) + DosBox.Height / 2);      //............
                    bU5 = false;                                                                                            //............
                }                                                                                                           //............
                levelup = false;                                                                                            //............
            }                    
            
            for (int i = 0; i < Blen; i++)                             //Loop Blen Times
            {
                Rect rectshoot = BoundsRelativeTo(shoot, gridi);       //Rect For Check Intersect
                Rect rectB = BoundsRelativeTo(B[i], gridi);            //Rect For Check Intersect
                Rect rectU = BoundsRelativeTo(U[i], gridi);            //Rect For Check Intersect

                if (rectB.IntersectsWith(RDosBox))                     //Check Error Intersects With Dos
                {
                    StopMove(B[i], 1928, 25);                          //Stop Move For Errors
                    Canvas.SetLeft(B[i], 1928);                        //Set Left Errors
                    Canvas.SetTop(B[i], 25);                           //Set Top  Errors
                    Life.Value -= 50;                                  //Live - 50
                    enemy++;                                           //Move + Enemy
                }
                if (rectU.IntersectsWith(RDosBox))                     //Check Bugs Intersects With Dos
                {
                    StopMove(U[i], 1943, 930);                          //Stop Move For Errors
                    Canvas.SetLeft(U[i], 1943);                         //Set Left Bugs
                    Canvas.SetTop(U[i], 930);                           //Set Top  Bugs
                    Life.Value -= 25;                                   //Live - 25
                    enemy++;                                            //Move + Enemy
                }
                if (rectB.IntersectsWith(rectshoot))                    //Check Error Intersects With Dos
                {
                    StopMove(B[i], 1928, 25);                           //Stop Move For Errors
                    Canvas.SetLeft(B[i], 1928);                         //Set Left Errors
                    Canvas.SetTop(B[i], 25);                            //Set Top  Errors
                    enemy++;                                            //Move + Enemy
                }                                                       
                if (rectU.IntersectsWith(rectshoot))                     //Check Bugs Intersects With Dos
                {
                    StopMove(U[i], 1943, 930);                           //Stop Move For Bugs
                    Canvas.SetLeft(U[i], 1943);                          //Set Left Bugs
                    Canvas.SetTop(U[i], 930);                            //Set Top  Bugs
                    enemy++;                                             //Move + Enemy
                }
            }
            if (enemy == round / 2000 * 2)                               //If Round End
            {
                bU1 = true;                                               //All Enemys Rest
                bU2 = true;                                               //All Enemys Rest
                bU3 = true;                                               //All Enemys Rest
                bU4 = true;                                               //All Enemys Rest
                bU5 = true;                                               //All Enemys Rest
                                                                          //All Enemys Rest
                bB1 = true;                                               //All Enemys Rest
                bB2 = true;                                               //All Enemys Rest
                bB3 = true;                                               //All Enemys Rest
                bB4 = true;                                               //All Enemys Rest
                bB5 = true;                                               //All Enemys Rest

                round+=20;                                                //Next Round
                if (round <= 9000)                                        //If Round No End Show Round
                {                                                         //If Round No End Show Round
                    lblR.Content = "Round " + (round / 2000 + 1) ;        //If Round No End Show Round
                    lblR.Visibility = Visibility.Visible;                 //If Round No End Show Round
                }                                                         //If Round No End Show Round
                levelup = true;                                           //Level Up
                enemy = 0;                                                //Start Enemy
                speed -= 2;                                               //Speed Enemy +
            }
            if (round >= 12000)                                            //If Last Round Win
            {                                                             
                MoveObj.Stop();                                           //Stop Main Timer
                MessageBox.Show("Victory");                               //Show Victory
                if(Class1.Bots == true)                                   //if Margalit, Done Margalit
                    Class1.Game[2] = true;                                //Done Margalit
                else
                    Class1.Game[1] = true;

                MainWindow main = new MainWindow();                       //Show Main
                main.Show();                                              //Show Main
                this.Close();                                             //Close This Window
            }

            if (Life.Value == 0)                                          //If Life Dos 0 Lose
                dead();                                                   //If Life Dos 0 Lose
        }
       
        private void Window_KeyDown(object sender, KeyEventArgs e)
        {
            if(e.Key == Key.Escape)                                //If Esc - Main Menu
            {
                MoveObj.Stop();                                           //Stop Main Timer
                MainWindow main = new MainWindow();                     //SHow Main Menu
                main.Show();                                            //SHow Main Menu
                this.Close();                                           //Close Window 
            }
        }

        public void dead()
        {
            MoveObj.Stop();                                            //Main Timer Stop
            MessageBox.Show("Dead");                                   //Show Messege Dead
            MainWindow main = new MainWindow();                        //Show Main Menu
            main.Show();                                               //Show Main Menu
            this.Close();                                              //Close Window
        }
        //private double Angle(Point origin, Point target)                                            
        //{                                                                                           
        //    var radians = Math.Atan2(origin.Y - target.Y, origin.X - target.X);                     
        //    var degrees = radians * (180 / Math.PI) - 90;                                           
        //    return degrees;                                                                         
        //}
        double speed = 12;                                      //Return Angle Acording To Point
        private double Angle(Point origin, Point target)        //Return Angle Acording To Point
        {                                                       //Return Angle Acording To Point
            Vector vecTo = target - origin;                     //Return Angle Acording To Point
            vecTo.Normalize();                                  //Return Angle Acording To Point
            double dotAngle = -vecTo.Y;                         //Return Angle Acording To Point
            double angle = Math.Acos(dotAngle);                 //Return Angle Acording To Point
            angle = angle * 180 / Math.PI;                      //Return Angle Acording To Point
            if (vecTo.X > 0)                                    //Return Angle Acording To Point
                return angle;                                   //Return Angle Acording To Point
            else                                                //Return Angle Acording To Point
                return -angle;                                  //Return Angle Acording To Point
        }                                                       //Return Angle Acording To Point
        Point c;                                                
        Point cr;                                               

        private void Window_MouseMove(object sender, MouseEventArgs e)                                       //Move Arrow Acorrding To Point
        {                                                                                                    //Move Arrow Acorrding To Point
            double y = Canvas.GetTop(Arrow) + Arrow.ActualWidth / 2.0;                                       //Move Arrow Acorrding To Point
            double x = Canvas.GetLeft(Arrow) + Arrow.ActualHeight / 2.0;                                     //Move Arrow Acorrding To Point
            Point O = new Point(x, y);                                                                       //Move Arrow Acorrding To Point
            //MessageBox.Show(c.X+" "+c.Y);                                                                  //Move Arrow Acorrding To Point
            cr = e.GetPosition(null);                                                                        //Move Arrow Acorrding To Point
            RotateTransform rotateTransform = new RotateTransform(Angle(cr,O)+90);                           //Move Arrow Acorrding To Point
            Arrow.RenderTransform = rotateTransform;                                                         //Move Arrow Acorrding To Point
        }                                                                                                    //Move Arrow Acorrding To Point

        private void Canvas_MouseDown(object sender, MouseButtonEventArgs e)
        {
                c = e.GetPosition(null);                                                                     //Move Bomarang Acording Point
                shoot.Visibility = Visibility.Visible;                                                       //Move Bomarang Acording Point
            if(c.X < 1920 - shoot.Width)                                                                     //Move Bomarang Acording Point
                MoveTo(shoot, c.X, c.Y);                                                                     //Move Bomarang Acording Point
            else                                                                                             //Move Bomarang Acording Point
                MoveTo(shoot, c.X-(shoot.Width+50), c.Y);                                                    //Move Bomarang Acording Point


        }
        public void MoveTo(Image target, double newX, double newY)
        {
            Vector offset = VisualTreeHelper.GetOffset(target);                                              //Move Speed 2 sec
            var top = offset.Y;                                                                              //Move Speed 2 sec
            var left = offset.X;                                                                             //Move Speed 2 sec
            TranslateTransform trans = new TranslateTransform();                                             //Move Speed 2 sec
            target.RenderTransform = trans;                                                                  //Move Speed 2 sec
            DoubleAnimation anim1 = new DoubleAnimation(0, newY - top, TimeSpan.FromSeconds(2));             //Move Speed 2 sec
            DoubleAnimation anim2 = new DoubleAnimation(0, newX - left, TimeSpan.FromSeconds(2));            //Move Speed 2 sec
            trans.BeginAnimation(TranslateTransform.YProperty, anim1);                                       //Move Speed 2 sec
            trans.BeginAnimation(TranslateTransform.XProperty, anim2);                                       //Move Speed 2 sec
                                                                                                             //Move Speed 2 sec
        }
        public static Rect BoundsRelativeTo(FrameworkElement element, Visual relativeTo)                      //Function That Return Rect According To Trasform
        {                                                                                                     //Function That Return Rect According To Trasform
            return element.TransformToVisual(relativeTo).TransformBounds(new Rect(element.RenderSize));       //Function That Return Rect According To Trasform
        }                                                                                                     //Function That Return Rect According To Trasform


        public void MoveToE(Image target, double newX, double newY)                                           //Move ,Speed - speed sec
        {                                                                                                     //Move ,Speed - speed sec
            Vector offset = VisualTreeHelper.GetOffset(target);                                               //Move ,Speed - speed sec
            var top = offset.Y;                                                                               //Move ,Speed - speed sec
            var left = offset.X;                                                                              //Move ,Speed - speed sec
            TranslateTransform trans = new TranslateTransform();                                              //Move ,Speed - speed sec
            target.RenderTransform = trans;                                                                   //Move ,Speed - speed sec
            DoubleAnimation anim1 = new DoubleAnimation(0, newY - top, TimeSpan.FromSeconds(speed));          //Move ,Speed - speed sec
            DoubleAnimation anim2 = new DoubleAnimation(0, newX - left, TimeSpan.FromSeconds(speed));         //Move ,Speed - speed sec
            trans.BeginAnimation(TranslateTransform.YProperty, anim1);                                        //Move ,Speed - speed sec
            trans.BeginAnimation(TranslateTransform.XProperty, anim2);
        }
        public static void StopMove(Image target, double newX, double newY)                                   //Move ,Speed - 0 sec
        {                                                                                                     //Move ,Speed - 0 sec
            Vector offset = VisualTreeHelper.GetOffset(target);                                               //Move ,Speed - 0 sec
            var top = offset.Y;                                                                               //Move ,Speed - 0 sec
            var left = offset.X;                                                                              //Move ,Speed - 0 sec
            TranslateTransform trans = new TranslateTransform();                                              //Move ,Speed - 0 sec
            target.RenderTransform = trans;                                                                   //Move ,Speed - 0 sec
            DoubleAnimation anim1 = new DoubleAnimation(0, newY - top, TimeSpan.FromSeconds(0.1));            //Move ,Speed - 0 sec
            DoubleAnimation anim2 = new DoubleAnimation(0, newX - left, TimeSpan.FromSeconds(0.1));           //Move ,Speed - 0 sec
            trans.BeginAnimation(TranslateTransform.YProperty, anim1);                                        //Move ,Speed - 0 sec
            trans.BeginAnimation(TranslateTransform.XProperty, anim2);
        }

        private void media_MediaEnded(object sender, RoutedEventArgs e)                                  //restart Toly
        {                                                                                                //restart Toly
            Toly.Stop();                                                                                 //restart Toly
            Toly.Play();                                                                                 //restart Toly
        }                                                                                                //restart Toly
    }
}
